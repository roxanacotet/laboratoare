//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceMyPhotosManagerWeb
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetailModel", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosManagerWCFService.Models")]
    public partial class DetailModel : object
    {
        
        private string DetailKeyField;
        
        private string DetailValueField;
        
        private int IdField;
        
        private int IdPhotoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailKey
        {
            get
            {
                return this.DetailKeyField;
            }
            set
            {
                this.DetailKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailValue
        {
            get
            {
                return this.DetailValueField;
            }
            set
            {
                this.DetailValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPhoto
        {
            get
            {
                return this.IdPhotoField;
            }
            set
            {
                this.IdPhotoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventModel", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosManagerWCFService.Models")]
    public partial class EventModel : object
    {
        
        private int IdField;
        
        private int IdPhotoField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPhoto
        {
            get
            {
                return this.IdPhotoField;
            }
            set
            {
                this.IdPhotoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeopleModel", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosManagerWCFService.Models")]
    public partial class PeopleModel : object
    {
        
        private int IdField;
        
        private int IdPhotoField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPhoto
        {
            get
            {
                return this.IdPhotoField;
            }
            set
            {
                this.IdPhotoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoModel", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosManagerWCFService.Models")]
    public partial class PhotoModel : object
    {
        
        private string CreationDateField;
        
        private ServiceReferenceMyPhotosManagerWeb.EventModel EventField;
        
        private int IdField;
        
        private bool IsDeletedField;
        
        private bool IsVideoField;
        
        private string LocationField;
        
        private string NameField;
        
        private string PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreationDate
        {
            get
            {
                return this.CreationDateField;
            }
            set
            {
                this.CreationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotosManagerWeb.EventModel Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted
        {
            get
            {
                return this.IsDeletedField;
            }
            set
            {
                this.IsDeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVideo
        {
            get
            {
                return this.IsVideoField;
            }
            set
            {
                this.IsVideoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMyPhotosManagerWeb.InterfaceMyPhotoManager")]
    public interface InterfaceMyPhotoManager
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/CreateDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/CreateDetailResponse")]
        System.Threading.Tasks.Task<int> CreateDetailAsync(ServiceReferenceMyPhotosManagerWeb.DetailModel detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/DeleteDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/DeleteDetailResponse")]
        System.Threading.Tasks.Task DeleteDetailAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/GetDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/GetDetailResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.DetailModel>> GetDetailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/GetDetailByID", ReplyAction="http://tempuri.org/InterfaceDetailController/GetDetailByIDResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.DetailModel> GetDetailByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/GetDetailsByPhotoId", ReplyAction="http://tempuri.org/InterfaceDetailController/GetDetailsByPhotoIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.DetailModel> GetDetailsByPhotoIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/UpdateDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/UpdateDetailResponse")]
        System.Threading.Tasks.Task UpdateDetailAsync(ServiceReferenceMyPhotosManagerWeb.DetailModel detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/SearchByKey", ReplyAction="http://tempuri.org/InterfaceDetailController/SearchByKeyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.DetailModel>> SearchByKeyAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/SearchByValue", ReplyAction="http://tempuri.org/InterfaceDetailController/SearchByValueResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.DetailModel>> SearchByValueAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/CreateEvent", ReplyAction="http://tempuri.org/InterfaceEventController/CreateEventResponse")]
        System.Threading.Tasks.Task<int> CreateEventAsync(ServiceReferenceMyPhotosManagerWeb.EventModel events);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/DeleteEvent", ReplyAction="http://tempuri.org/InterfaceEventController/DeleteEventResponse")]
        System.Threading.Tasks.Task DeleteEventAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/GetEvents", ReplyAction="http://tempuri.org/InterfaceEventController/GetEventsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.EventModel>> GetEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/GetEventByID", ReplyAction="http://tempuri.org/InterfaceEventController/GetEventByIDResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.EventModel> GetEventByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/GetEventByPhotoId", ReplyAction="http://tempuri.org/InterfaceEventController/GetEventByPhotoIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.EventModel> GetEventByPhotoIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/UpdateEvent", ReplyAction="http://tempuri.org/InterfaceEventController/UpdateEventResponse")]
        System.Threading.Tasks.Task UpdateEventAsync(ServiceReferenceMyPhotosManagerWeb.EventModel events);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/SearchEventByName", ReplyAction="http://tempuri.org/InterfaceEventController/SearchEventByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.EventModel>> SearchEventByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/CreatePeople", ReplyAction="http://tempuri.org/InterfacePeopleController/CreatePeopleResponse")]
        System.Threading.Tasks.Task<int> CreatePeopleAsync(ServiceReferenceMyPhotosManagerWeb.PeopleModel people);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/DeletePeople", ReplyAction="http://tempuri.org/InterfacePeopleController/DeletePeopleResponse")]
        System.Threading.Tasks.Task DeletePeopleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/GetPeoples", ReplyAction="http://tempuri.org/InterfacePeopleController/GetPeoplesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PeopleModel>> GetPeoplesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/GetPeopleByID", ReplyAction="http://tempuri.org/InterfacePeopleController/GetPeopleByIDResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.PeopleModel> GetPeopleByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/GetPeopleByPhotoId", ReplyAction="http://tempuri.org/InterfacePeopleController/GetPeopleByPhotoIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.PeopleModel> GetPeopleByPhotoIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/UpdatePeople", ReplyAction="http://tempuri.org/InterfacePeopleController/UpdatePeopleResponse")]
        System.Threading.Tasks.Task UpdatePeopleAsync(ServiceReferenceMyPhotosManagerWeb.PeopleModel people);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/SearchPeopleByName", ReplyAction="http://tempuri.org/InterfacePeopleController/SearchPeopleByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PeopleModel>> SearchPeopleByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/CreatePhoto", ReplyAction="http://tempuri.org/InterfacePhotoController/CreatePhotoResponse")]
        System.Threading.Tasks.Task<int> CreatePhotoAsync(ServiceReferenceMyPhotosManagerWeb.PhotoModel photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/DeletePhoto", ReplyAction="http://tempuri.org/InterfacePhotoController/DeletePhotoResponse")]
        System.Threading.Tasks.Task DeletePhotoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/GetPhotos", ReplyAction="http://tempuri.org/InterfacePhotoController/GetPhotosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PhotoModel>> GetPhotosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/GetVideos", ReplyAction="http://tempuri.org/InterfacePhotoController/GetVideosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PhotoModel>> GetVideosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/GetPhotoByID", ReplyAction="http://tempuri.org/InterfacePhotoController/GetPhotoByIDResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.PhotoModel> GetPhotoByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/UpdatePhoto", ReplyAction="http://tempuri.org/InterfacePhotoController/UpdatePhotoResponse")]
        System.Threading.Tasks.Task UpdatePhotoAsync(ServiceReferenceMyPhotosManagerWeb.PhotoModel photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/SearchPhotoByName", ReplyAction="http://tempuri.org/InterfacePhotoController/SearchPhotoByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PhotoModel>> SearchPhotoByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/SearchByLocation", ReplyAction="http://tempuri.org/InterfacePhotoController/SearchByLocationResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PhotoModel>> SearchByLocationAsync(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/SearchByCreationDate", ReplyAction="http://tempuri.org/InterfacePhotoController/SearchByCreationDateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PhotoModel>> SearchByCreationDateAsync(string date);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface InterfaceMyPhotoManagerChannel : ServiceReferenceMyPhotosManagerWeb.InterfaceMyPhotoManager, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class InterfaceMyPhotoManagerClient : System.ServiceModel.ClientBase<ServiceReferenceMyPhotosManagerWeb.InterfaceMyPhotoManager>, ServiceReferenceMyPhotosManagerWeb.InterfaceMyPhotoManager
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public InterfaceMyPhotoManagerClient() : 
                base(InterfaceMyPhotoManagerClient.GetDefaultBinding(), InterfaceMyPhotoManagerClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_InterfaceMyPhotoManager.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InterfaceMyPhotoManagerClient(EndpointConfiguration endpointConfiguration) : 
                base(InterfaceMyPhotoManagerClient.GetBindingForEndpoint(endpointConfiguration), InterfaceMyPhotoManagerClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InterfaceMyPhotoManagerClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(InterfaceMyPhotoManagerClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InterfaceMyPhotoManagerClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(InterfaceMyPhotoManagerClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InterfaceMyPhotoManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<int> CreateDetailAsync(ServiceReferenceMyPhotosManagerWeb.DetailModel detail)
        {
            return base.Channel.CreateDetailAsync(detail);
        }
        
        public System.Threading.Tasks.Task DeleteDetailAsync(int id)
        {
            return base.Channel.DeleteDetailAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.DetailModel>> GetDetailAsync()
        {
            return base.Channel.GetDetailAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.DetailModel> GetDetailByIDAsync(int id)
        {
            return base.Channel.GetDetailByIDAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.DetailModel> GetDetailsByPhotoIdAsync(int id)
        {
            return base.Channel.GetDetailsByPhotoIdAsync(id);
        }
        
        public System.Threading.Tasks.Task UpdateDetailAsync(ServiceReferenceMyPhotosManagerWeb.DetailModel detail)
        {
            return base.Channel.UpdateDetailAsync(detail);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.DetailModel>> SearchByKeyAsync(string key)
        {
            return base.Channel.SearchByKeyAsync(key);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.DetailModel>> SearchByValueAsync(string value)
        {
            return base.Channel.SearchByValueAsync(value);
        }
        
        public System.Threading.Tasks.Task<int> CreateEventAsync(ServiceReferenceMyPhotosManagerWeb.EventModel events)
        {
            return base.Channel.CreateEventAsync(events);
        }
        
        public System.Threading.Tasks.Task DeleteEventAsync(int id)
        {
            return base.Channel.DeleteEventAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.EventModel>> GetEventsAsync()
        {
            return base.Channel.GetEventsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.EventModel> GetEventByIDAsync(int id)
        {
            return base.Channel.GetEventByIDAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.EventModel> GetEventByPhotoIdAsync(int id)
        {
            return base.Channel.GetEventByPhotoIdAsync(id);
        }
        
        public System.Threading.Tasks.Task UpdateEventAsync(ServiceReferenceMyPhotosManagerWeb.EventModel events)
        {
            return base.Channel.UpdateEventAsync(events);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.EventModel>> SearchEventByNameAsync(string name)
        {
            return base.Channel.SearchEventByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<int> CreatePeopleAsync(ServiceReferenceMyPhotosManagerWeb.PeopleModel people)
        {
            return base.Channel.CreatePeopleAsync(people);
        }
        
        public System.Threading.Tasks.Task DeletePeopleAsync(int id)
        {
            return base.Channel.DeletePeopleAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PeopleModel>> GetPeoplesAsync()
        {
            return base.Channel.GetPeoplesAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.PeopleModel> GetPeopleByIDAsync(int id)
        {
            return base.Channel.GetPeopleByIDAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.PeopleModel> GetPeopleByPhotoIdAsync(int id)
        {
            return base.Channel.GetPeopleByPhotoIdAsync(id);
        }
        
        public System.Threading.Tasks.Task UpdatePeopleAsync(ServiceReferenceMyPhotosManagerWeb.PeopleModel people)
        {
            return base.Channel.UpdatePeopleAsync(people);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PeopleModel>> SearchPeopleByNameAsync(string name)
        {
            return base.Channel.SearchPeopleByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<int> CreatePhotoAsync(ServiceReferenceMyPhotosManagerWeb.PhotoModel photo)
        {
            return base.Channel.CreatePhotoAsync(photo);
        }
        
        public System.Threading.Tasks.Task DeletePhotoAsync(int id)
        {
            return base.Channel.DeletePhotoAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PhotoModel>> GetPhotosAsync()
        {
            return base.Channel.GetPhotosAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PhotoModel>> GetVideosAsync()
        {
            return base.Channel.GetVideosAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotosManagerWeb.PhotoModel> GetPhotoByIDAsync(int id)
        {
            return base.Channel.GetPhotoByIDAsync(id);
        }
        
        public System.Threading.Tasks.Task UpdatePhotoAsync(ServiceReferenceMyPhotosManagerWeb.PhotoModel photo)
        {
            return base.Channel.UpdatePhotoAsync(photo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PhotoModel>> SearchPhotoByNameAsync(string name)
        {
            return base.Channel.SearchPhotoByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PhotoModel>> SearchByLocationAsync(string location)
        {
            return base.Channel.SearchByLocationAsync(location);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotosManagerWeb.PhotoModel>> SearchByCreationDateAsync(string date)
        {
            return base.Channel.SearchByCreationDateAsync(date);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_InterfaceMyPhotoManager))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_InterfaceMyPhotoManager))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/PC");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return InterfaceMyPhotoManagerClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_InterfaceMyPhotoManager);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return InterfaceMyPhotoManagerClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_InterfaceMyPhotoManager);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_InterfaceMyPhotoManager,
        }
    }
}

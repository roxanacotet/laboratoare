//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace MyPhotosManagerWCFService.Models
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetailModel", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosManagerWCFService.Models")]
    public partial class DetailModel : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DetailKeyField;
        
        private string DetailValueField;
        
        private int IdField;
        
        private int IdPhotoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailKey
        {
            get
            {
                return this.DetailKeyField;
            }
            set
            {
                this.DetailKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailValue
        {
            get
            {
                return this.DetailValueField;
            }
            set
            {
                this.DetailValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPhoto
        {
            get
            {
                return this.IdPhotoField;
            }
            set
            {
                this.IdPhotoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventModel", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosManagerWCFService.Models")]
    public partial class EventModel : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private int IdPhotoField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPhoto
        {
            get
            {
                return this.IdPhotoField;
            }
            set
            {
                this.IdPhotoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeopleModel", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosManagerWCFService.Models")]
    public partial class PeopleModel : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private int IdPhotoField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPhoto
        {
            get
            {
                return this.IdPhotoField;
            }
            set
            {
                this.IdPhotoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoModel", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosManagerWCFService.Models")]
    public partial class PhotoModel : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CreationDateField;
        
        private MyPhotosManagerWCFService.Models.EventModel EventField;
        
        private int IdField;
        
        private bool IsDeletedField;
        
        private bool IsVideoField;
        
        private string LocationField;
        
        private string NameField;
        
        private string PathField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreationDate
        {
            get
            {
                return this.CreationDateField;
            }
            set
            {
                this.CreationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosManagerWCFService.Models.EventModel Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted
        {
            get
            {
                return this.IsDeletedField;
            }
            set
            {
                this.IsDeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVideo
        {
            get
            {
                return this.IsVideoField;
            }
            set
            {
                this.IsVideoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="InterfaceMyPhotoManager")]
public interface InterfaceMyPhotoManager
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/CreateDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/CreateDetailResponse")]
    int CreateDetail(MyPhotosManagerWCFService.Models.DetailModel detail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/CreateDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/CreateDetailResponse")]
    System.Threading.Tasks.Task<int> CreateDetailAsync(MyPhotosManagerWCFService.Models.DetailModel detail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/DeleteDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/DeleteDetailResponse")]
    void DeleteDetail(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/DeleteDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/DeleteDetailResponse")]
    System.Threading.Tasks.Task DeleteDetailAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/GetDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/GetDetailResponse")]
    MyPhotosManagerWCFService.Models.DetailModel[] GetDetail();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/GetDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/GetDetailResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.DetailModel[]> GetDetailAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/GetDetailByID", ReplyAction="http://tempuri.org/InterfaceDetailController/GetDetailByIDResponse")]
    MyPhotosManagerWCFService.Models.DetailModel GetDetailByID(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/GetDetailByID", ReplyAction="http://tempuri.org/InterfaceDetailController/GetDetailByIDResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.DetailModel> GetDetailByIDAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/GetDetailsByPhotoId", ReplyAction="http://tempuri.org/InterfaceDetailController/GetDetailsByPhotoIdResponse")]
    MyPhotosManagerWCFService.Models.DetailModel GetDetailsByPhotoId(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/GetDetailsByPhotoId", ReplyAction="http://tempuri.org/InterfaceDetailController/GetDetailsByPhotoIdResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.DetailModel> GetDetailsByPhotoIdAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/UpdateDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/UpdateDetailResponse")]
    void UpdateDetail(MyPhotosManagerWCFService.Models.DetailModel detail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/UpdateDetail", ReplyAction="http://tempuri.org/InterfaceDetailController/UpdateDetailResponse")]
    System.Threading.Tasks.Task UpdateDetailAsync(MyPhotosManagerWCFService.Models.DetailModel detail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/SearchByKey", ReplyAction="http://tempuri.org/InterfaceDetailController/SearchByKeyResponse")]
    MyPhotosManagerWCFService.Models.DetailModel[] SearchByKey(string key);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/SearchByKey", ReplyAction="http://tempuri.org/InterfaceDetailController/SearchByKeyResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.DetailModel[]> SearchByKeyAsync(string key);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/SearchByValue", ReplyAction="http://tempuri.org/InterfaceDetailController/SearchByValueResponse")]
    MyPhotosManagerWCFService.Models.DetailModel[] SearchByValue(string value);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceDetailController/SearchByValue", ReplyAction="http://tempuri.org/InterfaceDetailController/SearchByValueResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.DetailModel[]> SearchByValueAsync(string value);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/CreateEvent", ReplyAction="http://tempuri.org/InterfaceEventController/CreateEventResponse")]
    int CreateEvent(MyPhotosManagerWCFService.Models.EventModel events);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/CreateEvent", ReplyAction="http://tempuri.org/InterfaceEventController/CreateEventResponse")]
    System.Threading.Tasks.Task<int> CreateEventAsync(MyPhotosManagerWCFService.Models.EventModel events);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/DeleteEvent", ReplyAction="http://tempuri.org/InterfaceEventController/DeleteEventResponse")]
    void DeleteEvent(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/DeleteEvent", ReplyAction="http://tempuri.org/InterfaceEventController/DeleteEventResponse")]
    System.Threading.Tasks.Task DeleteEventAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/GetEvents", ReplyAction="http://tempuri.org/InterfaceEventController/GetEventsResponse")]
    MyPhotosManagerWCFService.Models.EventModel[] GetEvents();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/GetEvents", ReplyAction="http://tempuri.org/InterfaceEventController/GetEventsResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.EventModel[]> GetEventsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/GetEventByID", ReplyAction="http://tempuri.org/InterfaceEventController/GetEventByIDResponse")]
    MyPhotosManagerWCFService.Models.EventModel GetEventByID(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/GetEventByID", ReplyAction="http://tempuri.org/InterfaceEventController/GetEventByIDResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.EventModel> GetEventByIDAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/GetEventByPhotoId", ReplyAction="http://tempuri.org/InterfaceEventController/GetEventByPhotoIdResponse")]
    MyPhotosManagerWCFService.Models.EventModel GetEventByPhotoId(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/GetEventByPhotoId", ReplyAction="http://tempuri.org/InterfaceEventController/GetEventByPhotoIdResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.EventModel> GetEventByPhotoIdAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/UpdateEvent", ReplyAction="http://tempuri.org/InterfaceEventController/UpdateEventResponse")]
    void UpdateEvent(MyPhotosManagerWCFService.Models.EventModel events);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/UpdateEvent", ReplyAction="http://tempuri.org/InterfaceEventController/UpdateEventResponse")]
    System.Threading.Tasks.Task UpdateEventAsync(MyPhotosManagerWCFService.Models.EventModel events);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/SearchEventByName", ReplyAction="http://tempuri.org/InterfaceEventController/SearchEventByNameResponse")]
    MyPhotosManagerWCFService.Models.EventModel[] SearchEventByName(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEventController/SearchEventByName", ReplyAction="http://tempuri.org/InterfaceEventController/SearchEventByNameResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.EventModel[]> SearchEventByNameAsync(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/CreatePeople", ReplyAction="http://tempuri.org/InterfacePeopleController/CreatePeopleResponse")]
    int CreatePeople(MyPhotosManagerWCFService.Models.PeopleModel people);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/CreatePeople", ReplyAction="http://tempuri.org/InterfacePeopleController/CreatePeopleResponse")]
    System.Threading.Tasks.Task<int> CreatePeopleAsync(MyPhotosManagerWCFService.Models.PeopleModel people);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/DeletePeople", ReplyAction="http://tempuri.org/InterfacePeopleController/DeletePeopleResponse")]
    void DeletePeople(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/DeletePeople", ReplyAction="http://tempuri.org/InterfacePeopleController/DeletePeopleResponse")]
    System.Threading.Tasks.Task DeletePeopleAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/GetPeoples", ReplyAction="http://tempuri.org/InterfacePeopleController/GetPeoplesResponse")]
    MyPhotosManagerWCFService.Models.PeopleModel[] GetPeoples();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/GetPeoples", ReplyAction="http://tempuri.org/InterfacePeopleController/GetPeoplesResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PeopleModel[]> GetPeoplesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/GetPeopleByID", ReplyAction="http://tempuri.org/InterfacePeopleController/GetPeopleByIDResponse")]
    MyPhotosManagerWCFService.Models.PeopleModel GetPeopleByID(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/GetPeopleByID", ReplyAction="http://tempuri.org/InterfacePeopleController/GetPeopleByIDResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PeopleModel> GetPeopleByIDAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/GetPeopleByPhotoId", ReplyAction="http://tempuri.org/InterfacePeopleController/GetPeopleByPhotoIdResponse")]
    MyPhotosManagerWCFService.Models.PeopleModel GetPeopleByPhotoId(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/GetPeopleByPhotoId", ReplyAction="http://tempuri.org/InterfacePeopleController/GetPeopleByPhotoIdResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PeopleModel> GetPeopleByPhotoIdAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/UpdatePeople", ReplyAction="http://tempuri.org/InterfacePeopleController/UpdatePeopleResponse")]
    void UpdatePeople(MyPhotosManagerWCFService.Models.PeopleModel people);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/UpdatePeople", ReplyAction="http://tempuri.org/InterfacePeopleController/UpdatePeopleResponse")]
    System.Threading.Tasks.Task UpdatePeopleAsync(MyPhotosManagerWCFService.Models.PeopleModel people);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/SearchPeopleByName", ReplyAction="http://tempuri.org/InterfacePeopleController/SearchPeopleByNameResponse")]
    MyPhotosManagerWCFService.Models.PeopleModel[] SearchPeopleByName(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePeopleController/SearchPeopleByName", ReplyAction="http://tempuri.org/InterfacePeopleController/SearchPeopleByNameResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PeopleModel[]> SearchPeopleByNameAsync(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/CreatePhoto", ReplyAction="http://tempuri.org/InterfacePhotoController/CreatePhotoResponse")]
    int CreatePhoto(MyPhotosManagerWCFService.Models.PhotoModel photo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/CreatePhoto", ReplyAction="http://tempuri.org/InterfacePhotoController/CreatePhotoResponse")]
    System.Threading.Tasks.Task<int> CreatePhotoAsync(MyPhotosManagerWCFService.Models.PhotoModel photo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/DeletePhoto", ReplyAction="http://tempuri.org/InterfacePhotoController/DeletePhotoResponse")]
    void DeletePhoto(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/DeletePhoto", ReplyAction="http://tempuri.org/InterfacePhotoController/DeletePhotoResponse")]
    System.Threading.Tasks.Task DeletePhotoAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/GetPhotos", ReplyAction="http://tempuri.org/InterfacePhotoController/GetPhotosResponse")]
    MyPhotosManagerWCFService.Models.PhotoModel[] GetPhotos();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/GetPhotos", ReplyAction="http://tempuri.org/InterfacePhotoController/GetPhotosResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel[]> GetPhotosAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/GetVideos", ReplyAction="http://tempuri.org/InterfacePhotoController/GetVideosResponse")]
    MyPhotosManagerWCFService.Models.PhotoModel[] GetVideos();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/GetVideos", ReplyAction="http://tempuri.org/InterfacePhotoController/GetVideosResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel[]> GetVideosAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/GetPhotoByID", ReplyAction="http://tempuri.org/InterfacePhotoController/GetPhotoByIDResponse")]
    MyPhotosManagerWCFService.Models.PhotoModel GetPhotoByID(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/GetPhotoByID", ReplyAction="http://tempuri.org/InterfacePhotoController/GetPhotoByIDResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel> GetPhotoByIDAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/UpdatePhoto", ReplyAction="http://tempuri.org/InterfacePhotoController/UpdatePhotoResponse")]
    void UpdatePhoto(MyPhotosManagerWCFService.Models.PhotoModel photo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/UpdatePhoto", ReplyAction="http://tempuri.org/InterfacePhotoController/UpdatePhotoResponse")]
    System.Threading.Tasks.Task UpdatePhotoAsync(MyPhotosManagerWCFService.Models.PhotoModel photo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/SearchPhotoByName", ReplyAction="http://tempuri.org/InterfacePhotoController/SearchPhotoByNameResponse")]
    MyPhotosManagerWCFService.Models.PhotoModel[] SearchPhotoByName(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/SearchPhotoByName", ReplyAction="http://tempuri.org/InterfacePhotoController/SearchPhotoByNameResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel[]> SearchPhotoByNameAsync(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/SearchByLocation", ReplyAction="http://tempuri.org/InterfacePhotoController/SearchByLocationResponse")]
    MyPhotosManagerWCFService.Models.PhotoModel[] SearchByLocation(string location);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/SearchByLocation", ReplyAction="http://tempuri.org/InterfacePhotoController/SearchByLocationResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel[]> SearchByLocationAsync(string location);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/SearchByCreationDate", ReplyAction="http://tempuri.org/InterfacePhotoController/SearchByCreationDateResponse")]
    MyPhotosManagerWCFService.Models.PhotoModel[] SearchByCreationDate(string date);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotoController/SearchByCreationDate", ReplyAction="http://tempuri.org/InterfacePhotoController/SearchByCreationDateResponse")]
    System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel[]> SearchByCreationDateAsync(string date);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface InterfaceMyPhotoManagerChannel : InterfaceMyPhotoManager, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class InterfaceMyPhotoManagerClient : System.ServiceModel.ClientBase<InterfaceMyPhotoManager>, InterfaceMyPhotoManager
{
    public ServiceModel.Channels.Binding Binding { get; }

    public InterfaceMyPhotoManagerClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public InterfaceMyPhotoManagerClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public InterfaceMyPhotoManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public InterfaceMyPhotoManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
        Binding = binding;
    }

    public InterfaceMyPhotoManagerClient()
    {
    }

    public int CreateDetail(MyPhotosManagerWCFService.Models.DetailModel detail)
    {
        return base.Channel.CreateDetail(detail);
    }
    
    public System.Threading.Tasks.Task<int> CreateDetailAsync(MyPhotosManagerWCFService.Models.DetailModel detail)
    {
        return base.Channel.CreateDetailAsync(detail);
    }
    
    public void DeleteDetail(int id)
    {
        base.Channel.DeleteDetail(id);
    }
    
    public System.Threading.Tasks.Task DeleteDetailAsync(int id)
    {
        return base.Channel.DeleteDetailAsync(id);
    }
    
    public MyPhotosManagerWCFService.Models.DetailModel[] GetDetail()
    {
        return base.Channel.GetDetail();
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.DetailModel[]> GetDetailAsync()
    {
        return base.Channel.GetDetailAsync();
    }
    
    public MyPhotosManagerWCFService.Models.DetailModel GetDetailByID(int id)
    {
        return base.Channel.GetDetailByID(id);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.DetailModel> GetDetailByIDAsync(int id)
    {
        return base.Channel.GetDetailByIDAsync(id);
    }
    
    public MyPhotosManagerWCFService.Models.DetailModel GetDetailsByPhotoId(int id)
    {
        return base.Channel.GetDetailsByPhotoId(id);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.DetailModel> GetDetailsByPhotoIdAsync(int id)
    {
        return base.Channel.GetDetailsByPhotoIdAsync(id);
    }
    
    public void UpdateDetail(MyPhotosManagerWCFService.Models.DetailModel detail)
    {
        base.Channel.UpdateDetail(detail);
    }
    
    public System.Threading.Tasks.Task UpdateDetailAsync(MyPhotosManagerWCFService.Models.DetailModel detail)
    {
        return base.Channel.UpdateDetailAsync(detail);
    }
    
    public MyPhotosManagerWCFService.Models.DetailModel[] SearchByKey(string key)
    {
        return base.Channel.SearchByKey(key);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.DetailModel[]> SearchByKeyAsync(string key)
    {
        return base.Channel.SearchByKeyAsync(key);
    }
    
    public MyPhotosManagerWCFService.Models.DetailModel[] SearchByValue(string value)
    {
        return base.Channel.SearchByValue(value);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.DetailModel[]> SearchByValueAsync(string value)
    {
        return base.Channel.SearchByValueAsync(value);
    }
    
    public int CreateEvent(MyPhotosManagerWCFService.Models.EventModel events)
    {
        return base.Channel.CreateEvent(events);
    }
    
    public System.Threading.Tasks.Task<int> CreateEventAsync(MyPhotosManagerWCFService.Models.EventModel events)
    {
        return base.Channel.CreateEventAsync(events);
    }
    
    public void DeleteEvent(int id)
    {
        base.Channel.DeleteEvent(id);
    }
    
    public System.Threading.Tasks.Task DeleteEventAsync(int id)
    {
        return base.Channel.DeleteEventAsync(id);
    }
    
    public MyPhotosManagerWCFService.Models.EventModel[] GetEvents()
    {
        return base.Channel.GetEvents();
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.EventModel[]> GetEventsAsync()
    {
        return base.Channel.GetEventsAsync();
    }
    
    public MyPhotosManagerWCFService.Models.EventModel GetEventByID(int id)
    {
        return base.Channel.GetEventByID(id);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.EventModel> GetEventByIDAsync(int id)
    {
        return base.Channel.GetEventByIDAsync(id);
    }
    
    public MyPhotosManagerWCFService.Models.EventModel GetEventByPhotoId(int id)
    {
        return base.Channel.GetEventByPhotoId(id);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.EventModel> GetEventByPhotoIdAsync(int id)
    {
        return base.Channel.GetEventByPhotoIdAsync(id);
    }
    
    public void UpdateEvent(MyPhotosManagerWCFService.Models.EventModel events)
    {
        base.Channel.UpdateEvent(events);
    }
    
    public System.Threading.Tasks.Task UpdateEventAsync(MyPhotosManagerWCFService.Models.EventModel events)
    {
        return base.Channel.UpdateEventAsync(events);
    }
    
    public MyPhotosManagerWCFService.Models.EventModel[] SearchEventByName(string name)
    {
        return base.Channel.SearchEventByName(name);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.EventModel[]> SearchEventByNameAsync(string name)
    {
        return base.Channel.SearchEventByNameAsync(name);
    }
    
    public int CreatePeople(MyPhotosManagerWCFService.Models.PeopleModel people)
    {
        return base.Channel.CreatePeople(people);
    }
    
    public System.Threading.Tasks.Task<int> CreatePeopleAsync(MyPhotosManagerWCFService.Models.PeopleModel people)
    {
        return base.Channel.CreatePeopleAsync(people);
    }
    
    public void DeletePeople(int id)
    {
        base.Channel.DeletePeople(id);
    }
    
    public System.Threading.Tasks.Task DeletePeopleAsync(int id)
    {
        return base.Channel.DeletePeopleAsync(id);
    }
    
    public MyPhotosManagerWCFService.Models.PeopleModel[] GetPeoples()
    {
        return base.Channel.GetPeoples();
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PeopleModel[]> GetPeoplesAsync()
    {
        return base.Channel.GetPeoplesAsync();
    }
    
    public MyPhotosManagerWCFService.Models.PeopleModel GetPeopleByID(int id)
    {
        return base.Channel.GetPeopleByID(id);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PeopleModel> GetPeopleByIDAsync(int id)
    {
        return base.Channel.GetPeopleByIDAsync(id);
    }
    
    public MyPhotosManagerWCFService.Models.PeopleModel GetPeopleByPhotoId(int id)
    {
        return base.Channel.GetPeopleByPhotoId(id);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PeopleModel> GetPeopleByPhotoIdAsync(int id)
    {
        return base.Channel.GetPeopleByPhotoIdAsync(id);
    }
    
    public void UpdatePeople(MyPhotosManagerWCFService.Models.PeopleModel people)
    {
        base.Channel.UpdatePeople(people);
    }
    
    public System.Threading.Tasks.Task UpdatePeopleAsync(MyPhotosManagerWCFService.Models.PeopleModel people)
    {
        return base.Channel.UpdatePeopleAsync(people);
    }
    
    public MyPhotosManagerWCFService.Models.PeopleModel[] SearchPeopleByName(string name)
    {
        return base.Channel.SearchPeopleByName(name);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PeopleModel[]> SearchPeopleByNameAsync(string name)
    {
        return base.Channel.SearchPeopleByNameAsync(name);
    }
    
    public int CreatePhoto(MyPhotosManagerWCFService.Models.PhotoModel photo)
    {
        return base.Channel.CreatePhoto(photo);
    }
    
    public System.Threading.Tasks.Task<int> CreatePhotoAsync(MyPhotosManagerWCFService.Models.PhotoModel photo)
    {
        return base.Channel.CreatePhotoAsync(photo);
    }
    
    public void DeletePhoto(int id)
    {
        base.Channel.DeletePhoto(id);
    }
    
    public System.Threading.Tasks.Task DeletePhotoAsync(int id)
    {
        return base.Channel.DeletePhotoAsync(id);
    }
    
    public MyPhotosManagerWCFService.Models.PhotoModel[] GetPhotos()
    {
        return base.Channel.GetPhotos();
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel[]> GetPhotosAsync()
    {
        return base.Channel.GetPhotosAsync();
    }
    
    public MyPhotosManagerWCFService.Models.PhotoModel[] GetVideos()
    {
        return base.Channel.GetVideos();
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel[]> GetVideosAsync()
    {
        return base.Channel.GetVideosAsync();
    }
    
    public MyPhotosManagerWCFService.Models.PhotoModel GetPhotoByID(int id)
    {
        return base.Channel.GetPhotoByID(id);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel> GetPhotoByIDAsync(int id)
    {
        return base.Channel.GetPhotoByIDAsync(id);
    }
    
    public void UpdatePhoto(MyPhotosManagerWCFService.Models.PhotoModel photo)
    {
        base.Channel.UpdatePhoto(photo);
    }
    
    public System.Threading.Tasks.Task UpdatePhotoAsync(MyPhotosManagerWCFService.Models.PhotoModel photo)
    {
        return base.Channel.UpdatePhotoAsync(photo);
    }
    
    public MyPhotosManagerWCFService.Models.PhotoModel[] SearchPhotoByName(string name)
    {
        return base.Channel.SearchPhotoByName(name);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel[]> SearchPhotoByNameAsync(string name)
    {
        return base.Channel.SearchPhotoByNameAsync(name);
    }
    
    public MyPhotosManagerWCFService.Models.PhotoModel[] SearchByLocation(string location)
    {
        return base.Channel.SearchByLocation(location);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel[]> SearchByLocationAsync(string location)
    {
        return base.Channel.SearchByLocationAsync(location);
    }
    
    public MyPhotosManagerWCFService.Models.PhotoModel[] SearchByCreationDate(string date)
    {
        return base.Channel.SearchByCreationDate(date);
    }
    
    public System.Threading.Tasks.Task<MyPhotosManagerWCFService.Models.PhotoModel[]> SearchByCreationDateAsync(string date)
    {
        return base.Channel.SearchByCreationDateAsync(date);
    }

    internal void Close()
    {
        throw new NotImplementedException();
    }
}
